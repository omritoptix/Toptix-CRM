//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Toptix.App_Code {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ClientData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ClientData : global::System.Data.DataSet {
        
        private ClientDataReport1DataTable tableClientDataReport1;
        
        private ClientDataReportDataTable tableClientDataReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClientData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ClientData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ClientDataReport1"] != null)) {
                    base.Tables.Add(new ClientDataReport1DataTable(ds.Tables["ClientDataReport1"]));
                }
                if ((ds.Tables["ClientDataReport"] != null)) {
                    base.Tables.Add(new ClientDataReportDataTable(ds.Tables["ClientDataReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientDataReport1DataTable ClientDataReport1 {
            get {
                return this.tableClientDataReport1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClientDataReportDataTable ClientDataReport {
            get {
                return this.tableClientDataReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ClientData cln = ((ClientData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ClientDataReport1"] != null)) {
                    base.Tables.Add(new ClientDataReport1DataTable(ds.Tables["ClientDataReport1"]));
                }
                if ((ds.Tables["ClientDataReport"] != null)) {
                    base.Tables.Add(new ClientDataReportDataTable(ds.Tables["ClientDataReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableClientDataReport1 = ((ClientDataReport1DataTable)(base.Tables["ClientDataReport1"]));
            if ((initTable == true)) {
                if ((this.tableClientDataReport1 != null)) {
                    this.tableClientDataReport1.InitVars();
                }
            }
            this.tableClientDataReport = ((ClientDataReportDataTable)(base.Tables["ClientDataReport"]));
            if ((initTable == true)) {
                if ((this.tableClientDataReport != null)) {
                    this.tableClientDataReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ClientData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ClientData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableClientDataReport1 = new ClientDataReport1DataTable();
            base.Tables.Add(this.tableClientDataReport1);
            this.tableClientDataReport = new ClientDataReportDataTable();
            base.Tables.Add(this.tableClientDataReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClientDataReport1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeClientDataReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ClientData ds = new ClientData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ClientDataReport1RowChangeEventHandler(object sender, ClientDataReport1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ClientDataReportRowChangeEventHandler(object sender, ClientDataReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientDataReport1DataTable : global::System.Data.TypedTableBase<ClientDataReport1Row> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnContactPhone;
            
            private global::System.Data.DataColumn columnisThereLisenceForSite;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnContactMail;
            
            private global::System.Data.DataColumn columnLisenceValidTill;
            
            private global::System.Data.DataColumn columnLisenceNumber;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnPayTypeID;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnDistributorID;
            
            private global::System.Data.DataColumn columnActivityTypeID;
            
            private global::System.Data.DataColumn columnID1;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnCurrencyID1;
            
            private global::System.Data.DataColumn columnNetPrice;
            
            private global::System.Data.DataColumn columnConversionRate;
            
            private global::System.Data.DataColumn columnSupportDiscountValue;
            
            private global::System.Data.DataColumn columnSupportFirstChargeDate;
            
            private global::System.Data.DataColumn columnStatus1;
            
            private global::System.Data.DataColumn columnEnumChargeFrequencyID;
            
            private global::System.Data.DataColumn columnSupportCalculatedValue;
            
            private global::System.Data.DataColumn columnSupportPriceToCharge;
            
            private global::System.Data.DataColumn columnEnumCalculationTypeId;
            
            private global::System.Data.DataColumn columnSupportNetPriceToCharge;
            
            private global::System.Data.DataColumn columnPayConditionID;
            
            private global::System.Data.DataColumn columnID2;
            
            private global::System.Data.DataColumn columnName1;
            
            private global::System.Data.DataColumn columnisPartOfSubsidiary;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnCity1;
            
            private global::System.Data.DataColumn columnCountryID1;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnMail;
            
            private global::System.Data.DataColumn columnContactName1;
            
            private global::System.Data.DataColumn columnContactPhone1;
            
            private global::System.Data.DataColumn columnSupportFee;
            
            private global::System.Data.DataColumn columnLisenceFee;
            
            private global::System.Data.DataColumn columnProffesionalServicesFee;
            
            private global::System.Data.DataColumn columnCurrencyID2;
            
            private global::System.Data.DataColumn columnID3;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnID4;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnIsPartOfService;
            
            private global::System.Data.DataColumn columnEnumCalculationTypeID1;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetPrice1;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnID5;
            
            private global::System.Data.DataColumn columnDescription1;
            
            private global::System.Data.DataColumn columnID6;
            
            private global::System.Data.DataColumn columnName2;
            
            private global::System.Data.DataColumn columnVersion;
            
            private global::System.Data.DataColumn columnProductTypeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1DataTable() {
                this.TableName = "ClientDataReport1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientDataReport1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ClientDataReport1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPhoneColumn {
                get {
                    return this.columnContactPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isThereLisenceForSiteColumn {
                get {
                    return this.columnisThereLisenceForSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactMailColumn {
                get {
                    return this.columnContactMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LisenceValidTillColumn {
                get {
                    return this.columnLisenceValidTill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LisenceNumberColumn {
                get {
                    return this.columnLisenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayTypeIDColumn {
                get {
                    return this.columnPayTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistributorIDColumn {
                get {
                    return this.columnDistributorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivityTypeIDColumn {
                get {
                    return this.columnActivityTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID1Column {
                get {
                    return this.columnID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyID1Column {
                get {
                    return this.columnCurrencyID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPriceColumn {
                get {
                    return this.columnNetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConversionRateColumn {
                get {
                    return this.columnConversionRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportDiscountValueColumn {
                get {
                    return this.columnSupportDiscountValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportFirstChargeDateColumn {
                get {
                    return this.columnSupportFirstChargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status1Column {
                get {
                    return this.columnStatus1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnumChargeFrequencyIDColumn {
                get {
                    return this.columnEnumChargeFrequencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportCalculatedValueColumn {
                get {
                    return this.columnSupportCalculatedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportPriceToChargeColumn {
                get {
                    return this.columnSupportPriceToCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnumCalculationTypeIdColumn {
                get {
                    return this.columnEnumCalculationTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportNetPriceToChargeColumn {
                get {
                    return this.columnSupportNetPriceToCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayConditionIDColumn {
                get {
                    return this.columnPayConditionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID2Column {
                get {
                    return this.columnID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Name1Column {
                get {
                    return this.columnName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isPartOfSubsidiaryColumn {
                get {
                    return this.columnisPartOfSubsidiary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City1Column {
                get {
                    return this.columnCity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryID1Column {
                get {
                    return this.columnCountryID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MailColumn {
                get {
                    return this.columnMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactName1Column {
                get {
                    return this.columnContactName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPhone1Column {
                get {
                    return this.columnContactPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportFeeColumn {
                get {
                    return this.columnSupportFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LisenceFeeColumn {
                get {
                    return this.columnLisenceFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProffesionalServicesFeeColumn {
                get {
                    return this.columnProffesionalServicesFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyID2Column {
                get {
                    return this.columnCurrencyID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID3Column {
                get {
                    return this.columnID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID4Column {
                get {
                    return this.columnID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPartOfServiceColumn {
                get {
                    return this.columnIsPartOfService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnumCalculationTypeID1Column {
                get {
                    return this.columnEnumCalculationTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPrice1Column {
                get {
                    return this.columnNetPrice1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID5Column {
                get {
                    return this.columnID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Description1Column {
                get {
                    return this.columnDescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID6Column {
                get {
                    return this.columnID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Name2Column {
                get {
                    return this.columnName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionColumn {
                get {
                    return this.columnVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypeIDColumn {
                get {
                    return this.columnProductTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1Row this[int index] {
                get {
                    return ((ClientDataReport1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReport1RowChangeEventHandler ClientDataReport1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReport1RowChangeEventHandler ClientDataReport1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReport1RowChangeEventHandler ClientDataReport1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReport1RowChangeEventHandler ClientDataReport1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClientDataReport1Row(ClientDataReport1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1Row AddClientDataReport1Row(
                        string Name, 
                        string Address, 
                        string City, 
                        string Phone, 
                        string ContactName, 
                        string ContactPhone, 
                        bool isThereLisenceForSite, 
                        System.DateTime JoiningDate, 
                        string ContactMail, 
                        System.DateTime LisenceValidTill, 
                        string LisenceNumber, 
                        bool Status, 
                        int CountryID, 
                        int PayTypeID, 
                        int CurrencyID, 
                        int DistributorID, 
                        int ActivityTypeID, 
                        int ClientID, 
                        System.DateTime OrderDate, 
                        int CurrencyID1, 
                        double NetPrice, 
                        double ConversionRate, 
                        double SupportDiscountValue, 
                        System.DateTime SupportFirstChargeDate, 
                        bool Status1, 
                        int EnumChargeFrequencyID, 
                        double SupportCalculatedValue, 
                        double SupportPriceToCharge, 
                        int EnumCalculationTypeId, 
                        double SupportNetPriceToCharge, 
                        int PayConditionID, 
                        string Name1, 
                        bool isPartOfSubsidiary, 
                        string Address1, 
                        string City1, 
                        int CountryID1, 
                        string Phone1, 
                        string Mail, 
                        string ContactName1, 
                        string ContactPhone1, 
                        double SupportFee, 
                        double LisenceFee, 
                        double ProffesionalServicesFee, 
                        int CurrencyID2, 
                        string Description, 
                        int ProductID, 
                        int Quantity, 
                        double Price, 
                        bool IsPartOfService, 
                        int EnumCalculationTypeID1, 
                        double Discount, 
                        double NetPrice1, 
                        int OrderID, 
                        string Description1, 
                        string Name2, 
                        string Version, 
                        int ProductTypeID) {
                ClientDataReport1Row rowClientDataReport1Row = ((ClientDataReport1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Address,
                        City,
                        Phone,
                        ContactName,
                        ContactPhone,
                        isThereLisenceForSite,
                        JoiningDate,
                        ContactMail,
                        LisenceValidTill,
                        LisenceNumber,
                        Status,
                        CountryID,
                        PayTypeID,
                        CurrencyID,
                        DistributorID,
                        ActivityTypeID,
                        null,
                        ClientID,
                        OrderDate,
                        CurrencyID1,
                        NetPrice,
                        ConversionRate,
                        SupportDiscountValue,
                        SupportFirstChargeDate,
                        Status1,
                        EnumChargeFrequencyID,
                        SupportCalculatedValue,
                        SupportPriceToCharge,
                        EnumCalculationTypeId,
                        SupportNetPriceToCharge,
                        PayConditionID,
                        null,
                        Name1,
                        isPartOfSubsidiary,
                        Address1,
                        City1,
                        CountryID1,
                        Phone1,
                        Mail,
                        ContactName1,
                        ContactPhone1,
                        SupportFee,
                        LisenceFee,
                        ProffesionalServicesFee,
                        CurrencyID2,
                        null,
                        Description,
                        null,
                        ProductID,
                        Quantity,
                        Price,
                        IsPartOfService,
                        EnumCalculationTypeID1,
                        Discount,
                        NetPrice1,
                        OrderID,
                        null,
                        Description1,
                        null,
                        Name2,
                        Version,
                        ProductTypeID};
                rowClientDataReport1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientDataReport1Row);
                return rowClientDataReport1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1Row FindByIDID1ID2ID3ID4ID5ID6(int ID, int ID1, int ID2, int ID3, int ID4, int ID5, int ID6) {
                return ((ClientDataReport1Row)(this.Rows.Find(new object[] {
                            ID,
                            ID1,
                            ID2,
                            ID3,
                            ID4,
                            ID5,
                            ID6})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClientDataReport1DataTable cln = ((ClientDataReport1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientDataReport1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnCity = base.Columns["City"];
                this.columnPhone = base.Columns["Phone"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnContactPhone = base.Columns["ContactPhone"];
                this.columnisThereLisenceForSite = base.Columns["isThereLisenceForSite"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnContactMail = base.Columns["ContactMail"];
                this.columnLisenceValidTill = base.Columns["LisenceValidTill"];
                this.columnLisenceNumber = base.Columns["LisenceNumber"];
                this.columnStatus = base.Columns["Status"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnPayTypeID = base.Columns["PayTypeID"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnDistributorID = base.Columns["DistributorID"];
                this.columnActivityTypeID = base.Columns["ActivityTypeID"];
                this.columnID1 = base.Columns["ID1"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnCurrencyID1 = base.Columns["CurrencyID1"];
                this.columnNetPrice = base.Columns["NetPrice"];
                this.columnConversionRate = base.Columns["ConversionRate"];
                this.columnSupportDiscountValue = base.Columns["SupportDiscountValue"];
                this.columnSupportFirstChargeDate = base.Columns["SupportFirstChargeDate"];
                this.columnStatus1 = base.Columns["Status1"];
                this.columnEnumChargeFrequencyID = base.Columns["EnumChargeFrequencyID"];
                this.columnSupportCalculatedValue = base.Columns["SupportCalculatedValue"];
                this.columnSupportPriceToCharge = base.Columns["SupportPriceToCharge"];
                this.columnEnumCalculationTypeId = base.Columns["EnumCalculationTypeId"];
                this.columnSupportNetPriceToCharge = base.Columns["SupportNetPriceToCharge"];
                this.columnPayConditionID = base.Columns["PayConditionID"];
                this.columnID2 = base.Columns["ID2"];
                this.columnName1 = base.Columns["Name1"];
                this.columnisPartOfSubsidiary = base.Columns["isPartOfSubsidiary"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnCity1 = base.Columns["City1"];
                this.columnCountryID1 = base.Columns["CountryID1"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnMail = base.Columns["Mail"];
                this.columnContactName1 = base.Columns["ContactName1"];
                this.columnContactPhone1 = base.Columns["ContactPhone1"];
                this.columnSupportFee = base.Columns["SupportFee"];
                this.columnLisenceFee = base.Columns["LisenceFee"];
                this.columnProffesionalServicesFee = base.Columns["ProffesionalServicesFee"];
                this.columnCurrencyID2 = base.Columns["CurrencyID2"];
                this.columnID3 = base.Columns["ID3"];
                this.columnDescription = base.Columns["Description"];
                this.columnID4 = base.Columns["ID4"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice = base.Columns["Price"];
                this.columnIsPartOfService = base.Columns["IsPartOfService"];
                this.columnEnumCalculationTypeID1 = base.Columns["EnumCalculationTypeID1"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetPrice1 = base.Columns["NetPrice1"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnID5 = base.Columns["ID5"];
                this.columnDescription1 = base.Columns["Description1"];
                this.columnID6 = base.Columns["ID6"];
                this.columnName2 = base.Columns["Name2"];
                this.columnVersion = base.Columns["Version"];
                this.columnProductTypeID = base.Columns["ProductTypeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnContactPhone = new global::System.Data.DataColumn("ContactPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPhone);
                this.columnisThereLisenceForSite = new global::System.Data.DataColumn("isThereLisenceForSite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisThereLisenceForSite);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnContactMail = new global::System.Data.DataColumn("ContactMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactMail);
                this.columnLisenceValidTill = new global::System.Data.DataColumn("LisenceValidTill", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLisenceValidTill);
                this.columnLisenceNumber = new global::System.Data.DataColumn("LisenceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLisenceNumber);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnPayTypeID = new global::System.Data.DataColumn("PayTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayTypeID);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnDistributorID = new global::System.Data.DataColumn("DistributorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorID);
                this.columnActivityTypeID = new global::System.Data.DataColumn("ActivityTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivityTypeID);
                this.columnID1 = new global::System.Data.DataColumn("ID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID1);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnCurrencyID1 = new global::System.Data.DataColumn("CurrencyID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID1);
                this.columnNetPrice = new global::System.Data.DataColumn("NetPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPrice);
                this.columnConversionRate = new global::System.Data.DataColumn("ConversionRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConversionRate);
                this.columnSupportDiscountValue = new global::System.Data.DataColumn("SupportDiscountValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportDiscountValue);
                this.columnSupportFirstChargeDate = new global::System.Data.DataColumn("SupportFirstChargeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportFirstChargeDate);
                this.columnStatus1 = new global::System.Data.DataColumn("Status1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus1);
                this.columnEnumChargeFrequencyID = new global::System.Data.DataColumn("EnumChargeFrequencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnumChargeFrequencyID);
                this.columnSupportCalculatedValue = new global::System.Data.DataColumn("SupportCalculatedValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportCalculatedValue);
                this.columnSupportPriceToCharge = new global::System.Data.DataColumn("SupportPriceToCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportPriceToCharge);
                this.columnEnumCalculationTypeId = new global::System.Data.DataColumn("EnumCalculationTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnumCalculationTypeId);
                this.columnSupportNetPriceToCharge = new global::System.Data.DataColumn("SupportNetPriceToCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportNetPriceToCharge);
                this.columnPayConditionID = new global::System.Data.DataColumn("PayConditionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayConditionID);
                this.columnID2 = new global::System.Data.DataColumn("ID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID2);
                this.columnName1 = new global::System.Data.DataColumn("Name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName1);
                this.columnisPartOfSubsidiary = new global::System.Data.DataColumn("isPartOfSubsidiary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisPartOfSubsidiary);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnCity1 = new global::System.Data.DataColumn("City1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity1);
                this.columnCountryID1 = new global::System.Data.DataColumn("CountryID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID1);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnMail = new global::System.Data.DataColumn("Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnContactName1 = new global::System.Data.DataColumn("ContactName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName1);
                this.columnContactPhone1 = new global::System.Data.DataColumn("ContactPhone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPhone1);
                this.columnSupportFee = new global::System.Data.DataColumn("SupportFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportFee);
                this.columnLisenceFee = new global::System.Data.DataColumn("LisenceFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLisenceFee);
                this.columnProffesionalServicesFee = new global::System.Data.DataColumn("ProffesionalServicesFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProffesionalServicesFee);
                this.columnCurrencyID2 = new global::System.Data.DataColumn("CurrencyID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID2);
                this.columnID3 = new global::System.Data.DataColumn("ID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID3);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnID4 = new global::System.Data.DataColumn("ID4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID4);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnIsPartOfService = new global::System.Data.DataColumn("IsPartOfService", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPartOfService);
                this.columnEnumCalculationTypeID1 = new global::System.Data.DataColumn("EnumCalculationTypeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnumCalculationTypeID1);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetPrice1 = new global::System.Data.DataColumn("NetPrice1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPrice1);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnID5 = new global::System.Data.DataColumn("ID5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID5);
                this.columnDescription1 = new global::System.Data.DataColumn("Description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription1);
                this.columnID6 = new global::System.Data.DataColumn("ID6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID6);
                this.columnName2 = new global::System.Data.DataColumn("Name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName2);
                this.columnVersion = new global::System.Data.DataColumn("Version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion);
                this.columnProductTypeID = new global::System.Data.DataColumn("ProductTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTypeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnID1,
                                this.columnID2,
                                this.columnID3,
                                this.columnID4,
                                this.columnID5,
                                this.columnID6}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 2147483647;
                this.columnAddress.MaxLength = 2147483647;
                this.columnCity.MaxLength = 2147483647;
                this.columnPhone.MaxLength = 2147483647;
                this.columnContactName.MaxLength = 2147483647;
                this.columnContactPhone.MaxLength = 2147483647;
                this.columnisThereLisenceForSite.AllowDBNull = false;
                this.columnJoiningDate.AllowDBNull = false;
                this.columnContactMail.MaxLength = 2147483647;
                this.columnLisenceNumber.MaxLength = 2147483647;
                this.columnStatus.AllowDBNull = false;
                this.columnDistributorID.AllowDBNull = false;
                this.columnActivityTypeID.AllowDBNull = false;
                this.columnID1.AutoIncrement = true;
                this.columnID1.AutoIncrementSeed = -1;
                this.columnID1.AutoIncrementStep = -1;
                this.columnID1.AllowDBNull = false;
                this.columnID1.ReadOnly = true;
                this.columnClientID.AllowDBNull = false;
                this.columnOrderDate.AllowDBNull = false;
                this.columnCurrencyID1.AllowDBNull = false;
                this.columnNetPrice.AllowDBNull = false;
                this.columnConversionRate.AllowDBNull = false;
                this.columnStatus1.AllowDBNull = false;
                this.columnID2.AutoIncrement = true;
                this.columnID2.AutoIncrementSeed = -1;
                this.columnID2.AutoIncrementStep = -1;
                this.columnID2.AllowDBNull = false;
                this.columnID2.ReadOnly = true;
                this.columnName1.MaxLength = 2147483647;
                this.columnisPartOfSubsidiary.AllowDBNull = false;
                this.columnAddress1.MaxLength = 2147483647;
                this.columnCity1.MaxLength = 2147483647;
                this.columnCountryID1.AllowDBNull = false;
                this.columnPhone1.MaxLength = 2147483647;
                this.columnMail.MaxLength = 2147483647;
                this.columnContactName1.MaxLength = 2147483647;
                this.columnContactPhone1.MaxLength = 2147483647;
                this.columnCurrencyID2.AllowDBNull = false;
                this.columnID3.AutoIncrement = true;
                this.columnID3.AutoIncrementSeed = -1;
                this.columnID3.AutoIncrementStep = -1;
                this.columnID3.AllowDBNull = false;
                this.columnID3.ReadOnly = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 2147483647;
                this.columnID4.AutoIncrement = true;
                this.columnID4.AutoIncrementSeed = -1;
                this.columnID4.AutoIncrementStep = -1;
                this.columnID4.AllowDBNull = false;
                this.columnID4.ReadOnly = true;
                this.columnProductID.AllowDBNull = false;
                this.columnQuantity.AllowDBNull = false;
                this.columnPrice.AllowDBNull = false;
                this.columnIsPartOfService.AllowDBNull = false;
                this.columnEnumCalculationTypeID1.AllowDBNull = false;
                this.columnDiscount.AllowDBNull = false;
                this.columnNetPrice1.AllowDBNull = false;
                this.columnOrderID.AllowDBNull = false;
                this.columnID5.AutoIncrement = true;
                this.columnID5.AutoIncrementSeed = -1;
                this.columnID5.AutoIncrementStep = -1;
                this.columnID5.AllowDBNull = false;
                this.columnID5.ReadOnly = true;
                this.columnDescription1.AllowDBNull = false;
                this.columnDescription1.MaxLength = 2147483647;
                this.columnID6.AutoIncrement = true;
                this.columnID6.AutoIncrementSeed = -1;
                this.columnID6.AutoIncrementStep = -1;
                this.columnID6.AllowDBNull = false;
                this.columnID6.ReadOnly = true;
                this.columnName2.AllowDBNull = false;
                this.columnName2.MaxLength = 2147483647;
                this.columnVersion.MaxLength = 5;
                this.columnProductTypeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1Row NewClientDataReport1Row() {
                return ((ClientDataReport1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientDataReport1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClientDataReport1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientDataReport1RowChanged != null)) {
                    this.ClientDataReport1RowChanged(this, new ClientDataReport1RowChangeEvent(((ClientDataReport1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientDataReport1RowChanging != null)) {
                    this.ClientDataReport1RowChanging(this, new ClientDataReport1RowChangeEvent(((ClientDataReport1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientDataReport1RowDeleted != null)) {
                    this.ClientDataReport1RowDeleted(this, new ClientDataReport1RowChangeEvent(((ClientDataReport1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientDataReport1RowDeleting != null)) {
                    this.ClientDataReport1RowDeleting(this, new ClientDataReport1RowChangeEvent(((ClientDataReport1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClientDataReport1Row(ClientDataReport1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClientData ds = new ClientData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientDataReport1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClientDataReportDataTable : global::System.Data.TypedTableBase<ClientDataReportRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnContactPhone;
            
            private global::System.Data.DataColumn columnisThereLisenceForSite;
            
            private global::System.Data.DataColumn columnJoiningDate;
            
            private global::System.Data.DataColumn columnContactMail;
            
            private global::System.Data.DataColumn columnLisenceValidTill;
            
            private global::System.Data.DataColumn columnLisenceNumber;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnPayTypeID;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnDistributorID;
            
            private global::System.Data.DataColumn columnActivityTypeID;
            
            private global::System.Data.DataColumn columnID1;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnNetPrice;
            
            private global::System.Data.DataColumn columnSupportDiscountValue;
            
            private global::System.Data.DataColumn columnSupportFirstChargeDate;
            
            private global::System.Data.DataColumn columnStatus1;
            
            private global::System.Data.DataColumn columnEnumChargeFrequencyID;
            
            private global::System.Data.DataColumn columnSupportCalculatedValue;
            
            private global::System.Data.DataColumn columnSupportPriceToCharge;
            
            private global::System.Data.DataColumn columnEnumCalculationTypeId;
            
            private global::System.Data.DataColumn columnSupportNetPriceToCharge;
            
            private global::System.Data.DataColumn columnPayConditionID;
            
            private global::System.Data.DataColumn columnID2;
            
            private global::System.Data.DataColumn columnName1;
            
            private global::System.Data.DataColumn columnisPartOfSubsidiary;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnCity1;
            
            private global::System.Data.DataColumn columnCountryID1;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnMail;
            
            private global::System.Data.DataColumn columnContactName1;
            
            private global::System.Data.DataColumn columnContactPhone1;
            
            private global::System.Data.DataColumn columnSupportFee;
            
            private global::System.Data.DataColumn columnLisenceFee;
            
            private global::System.Data.DataColumn columnProffesionalServicesFee;
            
            private global::System.Data.DataColumn columnCurrencyID1;
            
            private global::System.Data.DataColumn columnID3;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnID4;
            
            private global::System.Data.DataColumn columnProductID;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnIsPartOfService;
            
            private global::System.Data.DataColumn columnEnumCalculationTypeID1;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetPrice1;
            
            private global::System.Data.DataColumn columnOrderID;
            
            private global::System.Data.DataColumn columnCurrencyID2;
            
            private global::System.Data.DataColumn columnID5;
            
            private global::System.Data.DataColumn columnDescription1;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnCode1;
            
            private global::System.Data.DataColumn columnSymbol;
            
            private global::System.Data.DataColumn columnID6;
            
            private global::System.Data.DataColumn columnName2;
            
            private global::System.Data.DataColumn columnVersion;
            
            private global::System.Data.DataColumn columnProductTypeID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportDataTable() {
                this.TableName = "ClientDataReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientDataReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ClientDataReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPhoneColumn {
                get {
                    return this.columnContactPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isThereLisenceForSiteColumn {
                get {
                    return this.columnisThereLisenceForSite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JoiningDateColumn {
                get {
                    return this.columnJoiningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactMailColumn {
                get {
                    return this.columnContactMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LisenceValidTillColumn {
                get {
                    return this.columnLisenceValidTill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LisenceNumberColumn {
                get {
                    return this.columnLisenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayTypeIDColumn {
                get {
                    return this.columnPayTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistributorIDColumn {
                get {
                    return this.columnDistributorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActivityTypeIDColumn {
                get {
                    return this.columnActivityTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID1Column {
                get {
                    return this.columnID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPriceColumn {
                get {
                    return this.columnNetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportDiscountValueColumn {
                get {
                    return this.columnSupportDiscountValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportFirstChargeDateColumn {
                get {
                    return this.columnSupportFirstChargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Status1Column {
                get {
                    return this.columnStatus1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnumChargeFrequencyIDColumn {
                get {
                    return this.columnEnumChargeFrequencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportCalculatedValueColumn {
                get {
                    return this.columnSupportCalculatedValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportPriceToChargeColumn {
                get {
                    return this.columnSupportPriceToCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnumCalculationTypeIdColumn {
                get {
                    return this.columnEnumCalculationTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportNetPriceToChargeColumn {
                get {
                    return this.columnSupportNetPriceToCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayConditionIDColumn {
                get {
                    return this.columnPayConditionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID2Column {
                get {
                    return this.columnID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Name1Column {
                get {
                    return this.columnName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isPartOfSubsidiaryColumn {
                get {
                    return this.columnisPartOfSubsidiary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn City1Column {
                get {
                    return this.columnCity1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryID1Column {
                get {
                    return this.columnCountryID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MailColumn {
                get {
                    return this.columnMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactName1Column {
                get {
                    return this.columnContactName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactPhone1Column {
                get {
                    return this.columnContactPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupportFeeColumn {
                get {
                    return this.columnSupportFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LisenceFeeColumn {
                get {
                    return this.columnLisenceFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProffesionalServicesFeeColumn {
                get {
                    return this.columnProffesionalServicesFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyID1Column {
                get {
                    return this.columnCurrencyID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID3Column {
                get {
                    return this.columnID3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID4Column {
                get {
                    return this.columnID4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIDColumn {
                get {
                    return this.columnProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPartOfServiceColumn {
                get {
                    return this.columnIsPartOfService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnumCalculationTypeID1Column {
                get {
                    return this.columnEnumCalculationTypeID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPrice1Column {
                get {
                    return this.columnNetPrice1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderIDColumn {
                get {
                    return this.columnOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyID2Column {
                get {
                    return this.columnCurrencyID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID5Column {
                get {
                    return this.columnID5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Description1Column {
                get {
                    return this.columnDescription1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Code1Column {
                get {
                    return this.columnCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolColumn {
                get {
                    return this.columnSymbol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID6Column {
                get {
                    return this.columnID6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Name2Column {
                get {
                    return this.columnName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionColumn {
                get {
                    return this.columnVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypeIDColumn {
                get {
                    return this.columnProductTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportRow this[int index] {
                get {
                    return ((ClientDataReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReportRowChangeEventHandler ClientDataReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReportRowChangeEventHandler ClientDataReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReportRowChangeEventHandler ClientDataReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ClientDataReportRowChangeEventHandler ClientDataReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddClientDataReportRow(ClientDataReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportRow AddClientDataReportRow(
                        string Name, 
                        string Address, 
                        string City, 
                        string Phone, 
                        string ContactName, 
                        string ContactPhone, 
                        bool isThereLisenceForSite, 
                        System.DateTime JoiningDate, 
                        string ContactMail, 
                        System.DateTime LisenceValidTill, 
                        string LisenceNumber, 
                        bool Status, 
                        int CountryID, 
                        int PayTypeID, 
                        int CurrencyID, 
                        int DistributorID, 
                        int ActivityTypeID, 
                        int ClientID, 
                        System.DateTime OrderDate, 
                        double NetPrice, 
                        double SupportDiscountValue, 
                        System.DateTime SupportFirstChargeDate, 
                        bool Status1, 
                        int EnumChargeFrequencyID, 
                        double SupportCalculatedValue, 
                        double SupportPriceToCharge, 
                        int EnumCalculationTypeId, 
                        double SupportNetPriceToCharge, 
                        int PayConditionID, 
                        string Name1, 
                        bool isPartOfSubsidiary, 
                        string Address1, 
                        string City1, 
                        int CountryID1, 
                        string Phone1, 
                        string Mail, 
                        string ContactName1, 
                        string ContactPhone1, 
                        double SupportFee, 
                        double LisenceFee, 
                        double ProffesionalServicesFee, 
                        int CurrencyID1, 
                        string Description, 
                        string Code, 
                        int ProductID, 
                        int Quantity, 
                        double Price, 
                        bool IsPartOfService, 
                        int EnumCalculationTypeID1, 
                        double Discount, 
                        double NetPrice1, 
                        int OrderID, 
                        int CurrencyID2, 
                        string Description1, 
                        string Country, 
                        string Code1, 
                        string Symbol, 
                        string Name2, 
                        string Version, 
                        int ProductTypeID) {
                ClientDataReportRow rowClientDataReportRow = ((ClientDataReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        Address,
                        City,
                        Phone,
                        ContactName,
                        ContactPhone,
                        isThereLisenceForSite,
                        JoiningDate,
                        ContactMail,
                        LisenceValidTill,
                        LisenceNumber,
                        Status,
                        CountryID,
                        PayTypeID,
                        CurrencyID,
                        DistributorID,
                        ActivityTypeID,
                        null,
                        ClientID,
                        OrderDate,
                        NetPrice,
                        SupportDiscountValue,
                        SupportFirstChargeDate,
                        Status1,
                        EnumChargeFrequencyID,
                        SupportCalculatedValue,
                        SupportPriceToCharge,
                        EnumCalculationTypeId,
                        SupportNetPriceToCharge,
                        PayConditionID,
                        null,
                        Name1,
                        isPartOfSubsidiary,
                        Address1,
                        City1,
                        CountryID1,
                        Phone1,
                        Mail,
                        ContactName1,
                        ContactPhone1,
                        SupportFee,
                        LisenceFee,
                        ProffesionalServicesFee,
                        CurrencyID1,
                        null,
                        Description,
                        Code,
                        null,
                        ProductID,
                        Quantity,
                        Price,
                        IsPartOfService,
                        EnumCalculationTypeID1,
                        Discount,
                        NetPrice1,
                        OrderID,
                        CurrencyID2,
                        null,
                        Description1,
                        Country,
                        Code1,
                        Symbol,
                        null,
                        Name2,
                        Version,
                        ProductTypeID};
                rowClientDataReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowClientDataReportRow);
                return rowClientDataReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportRow FindByIDID1ID2ID3ID4ID5ID6(int ID, int ID1, int ID2, int ID3, int ID4, int ID5, int ID6) {
                return ((ClientDataReportRow)(this.Rows.Find(new object[] {
                            ID,
                            ID1,
                            ID2,
                            ID3,
                            ID4,
                            ID5,
                            ID6})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ClientDataReportDataTable cln = ((ClientDataReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ClientDataReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnCity = base.Columns["City"];
                this.columnPhone = base.Columns["Phone"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnContactPhone = base.Columns["ContactPhone"];
                this.columnisThereLisenceForSite = base.Columns["isThereLisenceForSite"];
                this.columnJoiningDate = base.Columns["JoiningDate"];
                this.columnContactMail = base.Columns["ContactMail"];
                this.columnLisenceValidTill = base.Columns["LisenceValidTill"];
                this.columnLisenceNumber = base.Columns["LisenceNumber"];
                this.columnStatus = base.Columns["Status"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnPayTypeID = base.Columns["PayTypeID"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnDistributorID = base.Columns["DistributorID"];
                this.columnActivityTypeID = base.Columns["ActivityTypeID"];
                this.columnID1 = base.Columns["ID1"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnNetPrice = base.Columns["NetPrice"];
                this.columnSupportDiscountValue = base.Columns["SupportDiscountValue"];
                this.columnSupportFirstChargeDate = base.Columns["SupportFirstChargeDate"];
                this.columnStatus1 = base.Columns["Status1"];
                this.columnEnumChargeFrequencyID = base.Columns["EnumChargeFrequencyID"];
                this.columnSupportCalculatedValue = base.Columns["SupportCalculatedValue"];
                this.columnSupportPriceToCharge = base.Columns["SupportPriceToCharge"];
                this.columnEnumCalculationTypeId = base.Columns["EnumCalculationTypeId"];
                this.columnSupportNetPriceToCharge = base.Columns["SupportNetPriceToCharge"];
                this.columnPayConditionID = base.Columns["PayConditionID"];
                this.columnID2 = base.Columns["ID2"];
                this.columnName1 = base.Columns["Name1"];
                this.columnisPartOfSubsidiary = base.Columns["isPartOfSubsidiary"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnCity1 = base.Columns["City1"];
                this.columnCountryID1 = base.Columns["CountryID1"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnMail = base.Columns["Mail"];
                this.columnContactName1 = base.Columns["ContactName1"];
                this.columnContactPhone1 = base.Columns["ContactPhone1"];
                this.columnSupportFee = base.Columns["SupportFee"];
                this.columnLisenceFee = base.Columns["LisenceFee"];
                this.columnProffesionalServicesFee = base.Columns["ProffesionalServicesFee"];
                this.columnCurrencyID1 = base.Columns["CurrencyID1"];
                this.columnID3 = base.Columns["ID3"];
                this.columnDescription = base.Columns["Description"];
                this.columnCode = base.Columns["Code"];
                this.columnID4 = base.Columns["ID4"];
                this.columnProductID = base.Columns["ProductID"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnPrice = base.Columns["Price"];
                this.columnIsPartOfService = base.Columns["IsPartOfService"];
                this.columnEnumCalculationTypeID1 = base.Columns["EnumCalculationTypeID1"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetPrice1 = base.Columns["NetPrice1"];
                this.columnOrderID = base.Columns["OrderID"];
                this.columnCurrencyID2 = base.Columns["CurrencyID2"];
                this.columnID5 = base.Columns["ID5"];
                this.columnDescription1 = base.Columns["Description1"];
                this.columnCountry = base.Columns["Country"];
                this.columnCode1 = base.Columns["Code1"];
                this.columnSymbol = base.Columns["Symbol"];
                this.columnID6 = base.Columns["ID6"];
                this.columnName2 = base.Columns["Name2"];
                this.columnVersion = base.Columns["Version"];
                this.columnProductTypeID = base.Columns["ProductTypeID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnContactPhone = new global::System.Data.DataColumn("ContactPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPhone);
                this.columnisThereLisenceForSite = new global::System.Data.DataColumn("isThereLisenceForSite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisThereLisenceForSite);
                this.columnJoiningDate = new global::System.Data.DataColumn("JoiningDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoiningDate);
                this.columnContactMail = new global::System.Data.DataColumn("ContactMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactMail);
                this.columnLisenceValidTill = new global::System.Data.DataColumn("LisenceValidTill", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLisenceValidTill);
                this.columnLisenceNumber = new global::System.Data.DataColumn("LisenceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLisenceNumber);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnPayTypeID = new global::System.Data.DataColumn("PayTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayTypeID);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnDistributorID = new global::System.Data.DataColumn("DistributorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistributorID);
                this.columnActivityTypeID = new global::System.Data.DataColumn("ActivityTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivityTypeID);
                this.columnID1 = new global::System.Data.DataColumn("ID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID1);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnNetPrice = new global::System.Data.DataColumn("NetPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPrice);
                this.columnSupportDiscountValue = new global::System.Data.DataColumn("SupportDiscountValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportDiscountValue);
                this.columnSupportFirstChargeDate = new global::System.Data.DataColumn("SupportFirstChargeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportFirstChargeDate);
                this.columnStatus1 = new global::System.Data.DataColumn("Status1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus1);
                this.columnEnumChargeFrequencyID = new global::System.Data.DataColumn("EnumChargeFrequencyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnumChargeFrequencyID);
                this.columnSupportCalculatedValue = new global::System.Data.DataColumn("SupportCalculatedValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportCalculatedValue);
                this.columnSupportPriceToCharge = new global::System.Data.DataColumn("SupportPriceToCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportPriceToCharge);
                this.columnEnumCalculationTypeId = new global::System.Data.DataColumn("EnumCalculationTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnumCalculationTypeId);
                this.columnSupportNetPriceToCharge = new global::System.Data.DataColumn("SupportNetPriceToCharge", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportNetPriceToCharge);
                this.columnPayConditionID = new global::System.Data.DataColumn("PayConditionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayConditionID);
                this.columnID2 = new global::System.Data.DataColumn("ID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID2);
                this.columnName1 = new global::System.Data.DataColumn("Name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName1);
                this.columnisPartOfSubsidiary = new global::System.Data.DataColumn("isPartOfSubsidiary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisPartOfSubsidiary);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnCity1 = new global::System.Data.DataColumn("City1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity1);
                this.columnCountryID1 = new global::System.Data.DataColumn("CountryID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID1);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnMail = new global::System.Data.DataColumn("Mail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMail);
                this.columnContactName1 = new global::System.Data.DataColumn("ContactName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName1);
                this.columnContactPhone1 = new global::System.Data.DataColumn("ContactPhone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPhone1);
                this.columnSupportFee = new global::System.Data.DataColumn("SupportFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupportFee);
                this.columnLisenceFee = new global::System.Data.DataColumn("LisenceFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLisenceFee);
                this.columnProffesionalServicesFee = new global::System.Data.DataColumn("ProffesionalServicesFee", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProffesionalServicesFee);
                this.columnCurrencyID1 = new global::System.Data.DataColumn("CurrencyID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID1);
                this.columnID3 = new global::System.Data.DataColumn("ID3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID3);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnID4 = new global::System.Data.DataColumn("ID4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID4);
                this.columnProductID = new global::System.Data.DataColumn("ProductID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductID);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnIsPartOfService = new global::System.Data.DataColumn("IsPartOfService", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPartOfService);
                this.columnEnumCalculationTypeID1 = new global::System.Data.DataColumn("EnumCalculationTypeID1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnumCalculationTypeID1);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetPrice1 = new global::System.Data.DataColumn("NetPrice1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPrice1);
                this.columnOrderID = new global::System.Data.DataColumn("OrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderID);
                this.columnCurrencyID2 = new global::System.Data.DataColumn("CurrencyID2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID2);
                this.columnID5 = new global::System.Data.DataColumn("ID5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID5);
                this.columnDescription1 = new global::System.Data.DataColumn("Description1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription1);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnCode1 = new global::System.Data.DataColumn("Code1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode1);
                this.columnSymbol = new global::System.Data.DataColumn("Symbol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbol);
                this.columnID6 = new global::System.Data.DataColumn("ID6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID6);
                this.columnName2 = new global::System.Data.DataColumn("Name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName2);
                this.columnVersion = new global::System.Data.DataColumn("Version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion);
                this.columnProductTypeID = new global::System.Data.DataColumn("ProductTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTypeID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnID1,
                                this.columnID2,
                                this.columnID3,
                                this.columnID4,
                                this.columnID5,
                                this.columnID6}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 2147483647;
                this.columnAddress.MaxLength = 2147483647;
                this.columnCity.MaxLength = 2147483647;
                this.columnPhone.MaxLength = 2147483647;
                this.columnContactName.MaxLength = 2147483647;
                this.columnContactPhone.MaxLength = 2147483647;
                this.columnisThereLisenceForSite.AllowDBNull = false;
                this.columnJoiningDate.AllowDBNull = false;
                this.columnContactMail.MaxLength = 2147483647;
                this.columnLisenceNumber.MaxLength = 2147483647;
                this.columnStatus.AllowDBNull = false;
                this.columnDistributorID.AllowDBNull = false;
                this.columnActivityTypeID.AllowDBNull = false;
                this.columnID1.AutoIncrement = true;
                this.columnID1.AutoIncrementSeed = -1;
                this.columnID1.AutoIncrementStep = -1;
                this.columnID1.AllowDBNull = false;
                this.columnID1.ReadOnly = true;
                this.columnClientID.AllowDBNull = false;
                this.columnOrderDate.AllowDBNull = false;
                this.columnNetPrice.AllowDBNull = false;
                this.columnStatus1.AllowDBNull = false;
                this.columnID2.AutoIncrement = true;
                this.columnID2.AutoIncrementSeed = -1;
                this.columnID2.AutoIncrementStep = -1;
                this.columnID2.AllowDBNull = false;
                this.columnID2.ReadOnly = true;
                this.columnName1.MaxLength = 2147483647;
                this.columnisPartOfSubsidiary.AllowDBNull = false;
                this.columnAddress1.MaxLength = 2147483647;
                this.columnCity1.MaxLength = 2147483647;
                this.columnCountryID1.AllowDBNull = false;
                this.columnPhone1.MaxLength = 2147483647;
                this.columnMail.MaxLength = 2147483647;
                this.columnContactName1.MaxLength = 2147483647;
                this.columnContactPhone1.MaxLength = 2147483647;
                this.columnCurrencyID1.AllowDBNull = false;
                this.columnID3.AutoIncrement = true;
                this.columnID3.AutoIncrementSeed = -1;
                this.columnID3.AutoIncrementStep = -1;
                this.columnID3.AllowDBNull = false;
                this.columnID3.ReadOnly = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 2147483647;
                this.columnCode.MaxLength = 2147483647;
                this.columnID4.AutoIncrement = true;
                this.columnID4.AutoIncrementSeed = -1;
                this.columnID4.AutoIncrementStep = -1;
                this.columnID4.AllowDBNull = false;
                this.columnID4.ReadOnly = true;
                this.columnProductID.AllowDBNull = false;
                this.columnQuantity.AllowDBNull = false;
                this.columnPrice.AllowDBNull = false;
                this.columnIsPartOfService.AllowDBNull = false;
                this.columnEnumCalculationTypeID1.AllowDBNull = false;
                this.columnDiscount.AllowDBNull = false;
                this.columnNetPrice1.AllowDBNull = false;
                this.columnOrderID.AllowDBNull = false;
                this.columnCurrencyID2.AllowDBNull = false;
                this.columnID5.AutoIncrement = true;
                this.columnID5.AutoIncrementSeed = -1;
                this.columnID5.AutoIncrementStep = -1;
                this.columnID5.AllowDBNull = false;
                this.columnID5.ReadOnly = true;
                this.columnDescription1.MaxLength = 2147483647;
                this.columnCountry.MaxLength = 2147483647;
                this.columnCode1.MaxLength = 2147483647;
                this.columnSymbol.MaxLength = 2147483647;
                this.columnID6.AutoIncrement = true;
                this.columnID6.AutoIncrementSeed = -1;
                this.columnID6.AutoIncrementStep = -1;
                this.columnID6.AllowDBNull = false;
                this.columnID6.ReadOnly = true;
                this.columnName2.AllowDBNull = false;
                this.columnName2.MaxLength = 2147483647;
                this.columnVersion.MaxLength = 5;
                this.columnProductTypeID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportRow NewClientDataReportRow() {
                return ((ClientDataReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ClientDataReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ClientDataReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClientDataReportRowChanged != null)) {
                    this.ClientDataReportRowChanged(this, new ClientDataReportRowChangeEvent(((ClientDataReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClientDataReportRowChanging != null)) {
                    this.ClientDataReportRowChanging(this, new ClientDataReportRowChangeEvent(((ClientDataReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClientDataReportRowDeleted != null)) {
                    this.ClientDataReportRowDeleted(this, new ClientDataReportRowChangeEvent(((ClientDataReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClientDataReportRowDeleting != null)) {
                    this.ClientDataReportRowDeleting(this, new ClientDataReportRowChangeEvent(((ClientDataReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveClientDataReportRow(ClientDataReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ClientData ds = new ClientData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClientDataReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClientDataReport1Row : global::System.Data.DataRow {
            
            private ClientDataReport1DataTable tableClientDataReport1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientDataReport1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientDataReport1 = ((ClientDataReport1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableClientDataReport1.IDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableClientDataReport1.NameColumn]));
                }
                set {
                    this[this.tableClientDataReport1.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPhone {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.ContactPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPhone\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.ContactPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isThereLisenceForSite {
                get {
                    return ((bool)(this[this.tableClientDataReport1.isThereLisenceForSiteColumn]));
                }
                set {
                    this[this.tableClientDataReport1.isThereLisenceForSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime JoiningDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClientDataReport1.JoiningDateColumn]));
                }
                set {
                    this[this.tableClientDataReport1.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactMail {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.ContactMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactMail\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.ContactMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LisenceValidTill {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientDataReport1.LisenceValidTillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LisenceValidTill\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.LisenceValidTillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LisenceNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.LisenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LisenceNumber\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.LisenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Status {
                get {
                    return ((bool)(this[this.tableClientDataReport1.StatusColumn]));
                }
                set {
                    this[this.tableClientDataReport1.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport1.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PayTypeID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport1.PayTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayTypeID\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.PayTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport1.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DistributorID {
                get {
                    return ((int)(this[this.tableClientDataReport1.DistributorIDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.DistributorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ActivityTypeID {
                get {
                    return ((int)(this[this.tableClientDataReport1.ActivityTypeIDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.ActivityTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID1 {
                get {
                    return ((int)(this[this.tableClientDataReport1.ID1Column]));
                }
                set {
                    this[this.tableClientDataReport1.ID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientID {
                get {
                    return ((int)(this[this.tableClientDataReport1.ClientIDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OrderDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClientDataReport1.OrderDateColumn]));
                }
                set {
                    this[this.tableClientDataReport1.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID1 {
                get {
                    return ((int)(this[this.tableClientDataReport1.CurrencyID1Column]));
                }
                set {
                    this[this.tableClientDataReport1.CurrencyID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetPrice {
                get {
                    return ((double)(this[this.tableClientDataReport1.NetPriceColumn]));
                }
                set {
                    this[this.tableClientDataReport1.NetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ConversionRate {
                get {
                    return ((double)(this[this.tableClientDataReport1.ConversionRateColumn]));
                }
                set {
                    this[this.tableClientDataReport1.ConversionRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportDiscountValue {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.SupportDiscountValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportDiscountValue\' in table \'ClientDataReport1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.SupportDiscountValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SupportFirstChargeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientDataReport1.SupportFirstChargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportFirstChargeDate\' in table \'ClientDataReport1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.SupportFirstChargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Status1 {
                get {
                    return ((bool)(this[this.tableClientDataReport1.Status1Column]));
                }
                set {
                    this[this.tableClientDataReport1.Status1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EnumChargeFrequencyID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport1.EnumChargeFrequencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnumChargeFrequencyID\' in table \'ClientDataReport1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.EnumChargeFrequencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportCalculatedValue {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.SupportCalculatedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportCalculatedValue\' in table \'ClientDataReport1\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.SupportCalculatedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportPriceToCharge {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.SupportPriceToChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportPriceToCharge\' in table \'ClientDataReport1\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.SupportPriceToChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EnumCalculationTypeId {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport1.EnumCalculationTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnumCalculationTypeId\' in table \'ClientDataReport1\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.EnumCalculationTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportNetPriceToCharge {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.SupportNetPriceToChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportNetPriceToCharge\' in table \'ClientDataReport1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.SupportNetPriceToChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PayConditionID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport1.PayConditionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayConditionID\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.PayConditionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID2 {
                get {
                    return ((int)(this[this.tableClientDataReport1.ID2Column]));
                }
                set {
                    this[this.tableClientDataReport1.ID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.Name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name1\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.Name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isPartOfSubsidiary {
                get {
                    return ((bool)(this[this.tableClientDataReport1.isPartOfSubsidiaryColumn]));
                }
                set {
                    this[this.tableClientDataReport1.isPartOfSubsidiaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.City1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City1\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.City1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryID1 {
                get {
                    return ((int)(this[this.tableClientDataReport1.CountryID1Column]));
                }
                set {
                    this[this.tableClientDataReport1.CountryID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mail {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.MailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mail\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.ContactName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName1\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.ContactName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPhone1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.ContactPhone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPhone1\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.ContactPhone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportFee {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.SupportFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportFee\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.SupportFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LisenceFee {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.LisenceFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LisenceFee\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.LisenceFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProffesionalServicesFee {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport1.ProffesionalServicesFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProffesionalServicesFee\' in table \'ClientDataReport1\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.ProffesionalServicesFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID2 {
                get {
                    return ((int)(this[this.tableClientDataReport1.CurrencyID2Column]));
                }
                set {
                    this[this.tableClientDataReport1.CurrencyID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID3 {
                get {
                    return ((int)(this[this.tableClientDataReport1.ID3Column]));
                }
                set {
                    this[this.tableClientDataReport1.ID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableClientDataReport1.DescriptionColumn]));
                }
                set {
                    this[this.tableClientDataReport1.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID4 {
                get {
                    return ((int)(this[this.tableClientDataReport1.ID4Column]));
                }
                set {
                    this[this.tableClientDataReport1.ID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductID {
                get {
                    return ((int)(this[this.tableClientDataReport1.ProductIDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    return ((int)(this[this.tableClientDataReport1.QuantityColumn]));
                }
                set {
                    this[this.tableClientDataReport1.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Price {
                get {
                    return ((double)(this[this.tableClientDataReport1.PriceColumn]));
                }
                set {
                    this[this.tableClientDataReport1.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartOfService {
                get {
                    return ((bool)(this[this.tableClientDataReport1.IsPartOfServiceColumn]));
                }
                set {
                    this[this.tableClientDataReport1.IsPartOfServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EnumCalculationTypeID1 {
                get {
                    return ((int)(this[this.tableClientDataReport1.EnumCalculationTypeID1Column]));
                }
                set {
                    this[this.tableClientDataReport1.EnumCalculationTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Discount {
                get {
                    return ((double)(this[this.tableClientDataReport1.DiscountColumn]));
                }
                set {
                    this[this.tableClientDataReport1.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetPrice1 {
                get {
                    return ((double)(this[this.tableClientDataReport1.NetPrice1Column]));
                }
                set {
                    this[this.tableClientDataReport1.NetPrice1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderID {
                get {
                    return ((int)(this[this.tableClientDataReport1.OrderIDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID5 {
                get {
                    return ((int)(this[this.tableClientDataReport1.ID5Column]));
                }
                set {
                    this[this.tableClientDataReport1.ID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description1 {
                get {
                    return ((string)(this[this.tableClientDataReport1.Description1Column]));
                }
                set {
                    this[this.tableClientDataReport1.Description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID6 {
                get {
                    return ((int)(this[this.tableClientDataReport1.ID6Column]));
                }
                set {
                    this[this.tableClientDataReport1.ID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name2 {
                get {
                    return ((string)(this[this.tableClientDataReport1.Name2Column]));
                }
                set {
                    this[this.tableClientDataReport1.Name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Version {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport1.VersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Version\' in table \'ClientDataReport1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport1.VersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTypeID {
                get {
                    return ((int)(this[this.tableClientDataReport1.ProductTypeIDColumn]));
                }
                set {
                    this[this.tableClientDataReport1.ProductTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableClientDataReport1.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableClientDataReport1.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableClientDataReport1.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tableClientDataReport1.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableClientDataReport1.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhoneNull() {
                this[this.tableClientDataReport1.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableClientDataReport1.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNameNull() {
                this[this.tableClientDataReport1.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactPhoneNull() {
                return this.IsNull(this.tableClientDataReport1.ContactPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactPhoneNull() {
                this[this.tableClientDataReport1.ContactPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactMailNull() {
                return this.IsNull(this.tableClientDataReport1.ContactMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactMailNull() {
                this[this.tableClientDataReport1.ContactMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLisenceValidTillNull() {
                return this.IsNull(this.tableClientDataReport1.LisenceValidTillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLisenceValidTillNull() {
                this[this.tableClientDataReport1.LisenceValidTillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLisenceNumberNull() {
                return this.IsNull(this.tableClientDataReport1.LisenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLisenceNumberNull() {
                this[this.tableClientDataReport1.LisenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tableClientDataReport1.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryIDNull() {
                this[this.tableClientDataReport1.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayTypeIDNull() {
                return this.IsNull(this.tableClientDataReport1.PayTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayTypeIDNull() {
                this[this.tableClientDataReport1.PayTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableClientDataReport1.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableClientDataReport1.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportDiscountValueNull() {
                return this.IsNull(this.tableClientDataReport1.SupportDiscountValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportDiscountValueNull() {
                this[this.tableClientDataReport1.SupportDiscountValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportFirstChargeDateNull() {
                return this.IsNull(this.tableClientDataReport1.SupportFirstChargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportFirstChargeDateNull() {
                this[this.tableClientDataReport1.SupportFirstChargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnumChargeFrequencyIDNull() {
                return this.IsNull(this.tableClientDataReport1.EnumChargeFrequencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnumChargeFrequencyIDNull() {
                this[this.tableClientDataReport1.EnumChargeFrequencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportCalculatedValueNull() {
                return this.IsNull(this.tableClientDataReport1.SupportCalculatedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportCalculatedValueNull() {
                this[this.tableClientDataReport1.SupportCalculatedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportPriceToChargeNull() {
                return this.IsNull(this.tableClientDataReport1.SupportPriceToChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportPriceToChargeNull() {
                this[this.tableClientDataReport1.SupportPriceToChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnumCalculationTypeIdNull() {
                return this.IsNull(this.tableClientDataReport1.EnumCalculationTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnumCalculationTypeIdNull() {
                this[this.tableClientDataReport1.EnumCalculationTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportNetPriceToChargeNull() {
                return this.IsNull(this.tableClientDataReport1.SupportNetPriceToChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportNetPriceToChargeNull() {
                this[this.tableClientDataReport1.SupportNetPriceToChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayConditionIDNull() {
                return this.IsNull(this.tableClientDataReport1.PayConditionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayConditionIDNull() {
                this[this.tableClientDataReport1.PayConditionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsName1Null() {
                return this.IsNull(this.tableClientDataReport1.Name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetName1Null() {
                this[this.tableClientDataReport1.Name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableClientDataReport1.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress1Null() {
                this[this.tableClientDataReport1.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCity1Null() {
                return this.IsNull(this.tableClientDataReport1.City1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCity1Null() {
                this[this.tableClientDataReport1.City1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableClientDataReport1.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhone1Null() {
                this[this.tableClientDataReport1.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMailNull() {
                return this.IsNull(this.tableClientDataReport1.MailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMailNull() {
                this[this.tableClientDataReport1.MailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactName1Null() {
                return this.IsNull(this.tableClientDataReport1.ContactName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactName1Null() {
                this[this.tableClientDataReport1.ContactName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactPhone1Null() {
                return this.IsNull(this.tableClientDataReport1.ContactPhone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactPhone1Null() {
                this[this.tableClientDataReport1.ContactPhone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportFeeNull() {
                return this.IsNull(this.tableClientDataReport1.SupportFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportFeeNull() {
                this[this.tableClientDataReport1.SupportFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLisenceFeeNull() {
                return this.IsNull(this.tableClientDataReport1.LisenceFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLisenceFeeNull() {
                this[this.tableClientDataReport1.LisenceFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProffesionalServicesFeeNull() {
                return this.IsNull(this.tableClientDataReport1.ProffesionalServicesFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProffesionalServicesFeeNull() {
                this[this.tableClientDataReport1.ProffesionalServicesFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionNull() {
                return this.IsNull(this.tableClientDataReport1.VersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionNull() {
                this[this.tableClientDataReport1.VersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ClientDataReportRow : global::System.Data.DataRow {
            
            private ClientDataReportDataTable tableClientDataReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ClientDataReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClientDataReport = ((ClientDataReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableClientDataReport.IDColumn]));
                }
                set {
                    this[this.tableClientDataReport.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableClientDataReport.NameColumn]));
                }
                set {
                    this[this.tableClientDataReport.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPhone {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.ContactPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPhone\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.ContactPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isThereLisenceForSite {
                get {
                    return ((bool)(this[this.tableClientDataReport.isThereLisenceForSiteColumn]));
                }
                set {
                    this[this.tableClientDataReport.isThereLisenceForSiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime JoiningDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClientDataReport.JoiningDateColumn]));
                }
                set {
                    this[this.tableClientDataReport.JoiningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactMail {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.ContactMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactMail\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.ContactMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LisenceValidTill {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientDataReport.LisenceValidTillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LisenceValidTill\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.LisenceValidTillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LisenceNumber {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.LisenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LisenceNumber\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.LisenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Status {
                get {
                    return ((bool)(this[this.tableClientDataReport.StatusColumn]));
                }
                set {
                    this[this.tableClientDataReport.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PayTypeID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport.PayTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayTypeID\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.PayTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DistributorID {
                get {
                    return ((int)(this[this.tableClientDataReport.DistributorIDColumn]));
                }
                set {
                    this[this.tableClientDataReport.DistributorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ActivityTypeID {
                get {
                    return ((int)(this[this.tableClientDataReport.ActivityTypeIDColumn]));
                }
                set {
                    this[this.tableClientDataReport.ActivityTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID1 {
                get {
                    return ((int)(this[this.tableClientDataReport.ID1Column]));
                }
                set {
                    this[this.tableClientDataReport.ID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientID {
                get {
                    return ((int)(this[this.tableClientDataReport.ClientIDColumn]));
                }
                set {
                    this[this.tableClientDataReport.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OrderDate {
                get {
                    return ((global::System.DateTime)(this[this.tableClientDataReport.OrderDateColumn]));
                }
                set {
                    this[this.tableClientDataReport.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetPrice {
                get {
                    return ((double)(this[this.tableClientDataReport.NetPriceColumn]));
                }
                set {
                    this[this.tableClientDataReport.NetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportDiscountValue {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.SupportDiscountValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportDiscountValue\' in table \'ClientDataReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SupportDiscountValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SupportFirstChargeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableClientDataReport.SupportFirstChargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportFirstChargeDate\' in table \'ClientDataReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SupportFirstChargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Status1 {
                get {
                    return ((bool)(this[this.tableClientDataReport.Status1Column]));
                }
                set {
                    this[this.tableClientDataReport.Status1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EnumChargeFrequencyID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport.EnumChargeFrequencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnumChargeFrequencyID\' in table \'ClientDataReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.EnumChargeFrequencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportCalculatedValue {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.SupportCalculatedValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportCalculatedValue\' in table \'ClientDataReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SupportCalculatedValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportPriceToCharge {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.SupportPriceToChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportPriceToCharge\' in table \'ClientDataReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SupportPriceToChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EnumCalculationTypeId {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport.EnumCalculationTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnumCalculationTypeId\' in table \'ClientDataReport\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.EnumCalculationTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportNetPriceToCharge {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.SupportNetPriceToChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportNetPriceToCharge\' in table \'ClientDataReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SupportNetPriceToChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PayConditionID {
                get {
                    try {
                        return ((int)(this[this.tableClientDataReport.PayConditionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayConditionID\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.PayConditionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID2 {
                get {
                    return ((int)(this[this.tableClientDataReport.ID2Column]));
                }
                set {
                    this[this.tableClientDataReport.ID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.Name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.Name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isPartOfSubsidiary {
                get {
                    return ((bool)(this[this.tableClientDataReport.isPartOfSubsidiaryColumn]));
                }
                set {
                    this[this.tableClientDataReport.isPartOfSubsidiaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.City1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.City1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryID1 {
                get {
                    return ((int)(this[this.tableClientDataReport.CountryID1Column]));
                }
                set {
                    this[this.tableClientDataReport.CountryID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mail {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.MailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mail\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.MailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.ContactName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.ContactName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactPhone1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.ContactPhone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPhone1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.ContactPhone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SupportFee {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.SupportFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupportFee\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SupportFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LisenceFee {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.LisenceFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LisenceFee\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.LisenceFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ProffesionalServicesFee {
                get {
                    try {
                        return ((double)(this[this.tableClientDataReport.ProffesionalServicesFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProffesionalServicesFee\' in table \'ClientDataReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.ProffesionalServicesFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID1 {
                get {
                    return ((int)(this[this.tableClientDataReport.CurrencyID1Column]));
                }
                set {
                    this[this.tableClientDataReport.CurrencyID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID3 {
                get {
                    return ((int)(this[this.tableClientDataReport.ID3Column]));
                }
                set {
                    this[this.tableClientDataReport.ID3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableClientDataReport.DescriptionColumn]));
                }
                set {
                    this[this.tableClientDataReport.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID4 {
                get {
                    return ((int)(this[this.tableClientDataReport.ID4Column]));
                }
                set {
                    this[this.tableClientDataReport.ID4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductID {
                get {
                    return ((int)(this[this.tableClientDataReport.ProductIDColumn]));
                }
                set {
                    this[this.tableClientDataReport.ProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    return ((int)(this[this.tableClientDataReport.QuantityColumn]));
                }
                set {
                    this[this.tableClientDataReport.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Price {
                get {
                    return ((double)(this[this.tableClientDataReport.PriceColumn]));
                }
                set {
                    this[this.tableClientDataReport.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartOfService {
                get {
                    return ((bool)(this[this.tableClientDataReport.IsPartOfServiceColumn]));
                }
                set {
                    this[this.tableClientDataReport.IsPartOfServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EnumCalculationTypeID1 {
                get {
                    return ((int)(this[this.tableClientDataReport.EnumCalculationTypeID1Column]));
                }
                set {
                    this[this.tableClientDataReport.EnumCalculationTypeID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Discount {
                get {
                    return ((double)(this[this.tableClientDataReport.DiscountColumn]));
                }
                set {
                    this[this.tableClientDataReport.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NetPrice1 {
                get {
                    return ((double)(this[this.tableClientDataReport.NetPrice1Column]));
                }
                set {
                    this[this.tableClientDataReport.NetPrice1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderID {
                get {
                    return ((int)(this[this.tableClientDataReport.OrderIDColumn]));
                }
                set {
                    this[this.tableClientDataReport.OrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyID2 {
                get {
                    return ((int)(this[this.tableClientDataReport.CurrencyID2Column]));
                }
                set {
                    this[this.tableClientDataReport.CurrencyID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID5 {
                get {
                    return ((int)(this[this.tableClientDataReport.ID5Column]));
                }
                set {
                    this[this.tableClientDataReport.ID5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.Description1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.Description1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code1 {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.Code1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code1\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.Code1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbol {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.SymbolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Symbol\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.SymbolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID6 {
                get {
                    return ((int)(this[this.tableClientDataReport.ID6Column]));
                }
                set {
                    this[this.tableClientDataReport.ID6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name2 {
                get {
                    return ((string)(this[this.tableClientDataReport.Name2Column]));
                }
                set {
                    this[this.tableClientDataReport.Name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Version {
                get {
                    try {
                        return ((string)(this[this.tableClientDataReport.VersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Version\' in table \'ClientDataReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClientDataReport.VersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTypeID {
                get {
                    return ((int)(this[this.tableClientDataReport.ProductTypeIDColumn]));
                }
                set {
                    this[this.tableClientDataReport.ProductTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableClientDataReport.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableClientDataReport.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tableClientDataReport.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tableClientDataReport.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableClientDataReport.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhoneNull() {
                this[this.tableClientDataReport.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableClientDataReport.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNameNull() {
                this[this.tableClientDataReport.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactPhoneNull() {
                return this.IsNull(this.tableClientDataReport.ContactPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactPhoneNull() {
                this[this.tableClientDataReport.ContactPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactMailNull() {
                return this.IsNull(this.tableClientDataReport.ContactMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactMailNull() {
                this[this.tableClientDataReport.ContactMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLisenceValidTillNull() {
                return this.IsNull(this.tableClientDataReport.LisenceValidTillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLisenceValidTillNull() {
                this[this.tableClientDataReport.LisenceValidTillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLisenceNumberNull() {
                return this.IsNull(this.tableClientDataReport.LisenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLisenceNumberNull() {
                this[this.tableClientDataReport.LisenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tableClientDataReport.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryIDNull() {
                this[this.tableClientDataReport.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayTypeIDNull() {
                return this.IsNull(this.tableClientDataReport.PayTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayTypeIDNull() {
                this[this.tableClientDataReport.PayTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableClientDataReport.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableClientDataReport.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportDiscountValueNull() {
                return this.IsNull(this.tableClientDataReport.SupportDiscountValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportDiscountValueNull() {
                this[this.tableClientDataReport.SupportDiscountValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportFirstChargeDateNull() {
                return this.IsNull(this.tableClientDataReport.SupportFirstChargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportFirstChargeDateNull() {
                this[this.tableClientDataReport.SupportFirstChargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnumChargeFrequencyIDNull() {
                return this.IsNull(this.tableClientDataReport.EnumChargeFrequencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnumChargeFrequencyIDNull() {
                this[this.tableClientDataReport.EnumChargeFrequencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportCalculatedValueNull() {
                return this.IsNull(this.tableClientDataReport.SupportCalculatedValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportCalculatedValueNull() {
                this[this.tableClientDataReport.SupportCalculatedValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportPriceToChargeNull() {
                return this.IsNull(this.tableClientDataReport.SupportPriceToChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportPriceToChargeNull() {
                this[this.tableClientDataReport.SupportPriceToChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnumCalculationTypeIdNull() {
                return this.IsNull(this.tableClientDataReport.EnumCalculationTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnumCalculationTypeIdNull() {
                this[this.tableClientDataReport.EnumCalculationTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportNetPriceToChargeNull() {
                return this.IsNull(this.tableClientDataReport.SupportNetPriceToChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportNetPriceToChargeNull() {
                this[this.tableClientDataReport.SupportNetPriceToChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayConditionIDNull() {
                return this.IsNull(this.tableClientDataReport.PayConditionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayConditionIDNull() {
                this[this.tableClientDataReport.PayConditionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsName1Null() {
                return this.IsNull(this.tableClientDataReport.Name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetName1Null() {
                this[this.tableClientDataReport.Name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableClientDataReport.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress1Null() {
                this[this.tableClientDataReport.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCity1Null() {
                return this.IsNull(this.tableClientDataReport.City1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCity1Null() {
                this[this.tableClientDataReport.City1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableClientDataReport.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhone1Null() {
                this[this.tableClientDataReport.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMailNull() {
                return this.IsNull(this.tableClientDataReport.MailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMailNull() {
                this[this.tableClientDataReport.MailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactName1Null() {
                return this.IsNull(this.tableClientDataReport.ContactName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactName1Null() {
                this[this.tableClientDataReport.ContactName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactPhone1Null() {
                return this.IsNull(this.tableClientDataReport.ContactPhone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactPhone1Null() {
                this[this.tableClientDataReport.ContactPhone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupportFeeNull() {
                return this.IsNull(this.tableClientDataReport.SupportFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupportFeeNull() {
                this[this.tableClientDataReport.SupportFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLisenceFeeNull() {
                return this.IsNull(this.tableClientDataReport.LisenceFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLisenceFeeNull() {
                this[this.tableClientDataReport.LisenceFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProffesionalServicesFeeNull() {
                return this.IsNull(this.tableClientDataReport.ProffesionalServicesFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProffesionalServicesFeeNull() {
                this[this.tableClientDataReport.ProffesionalServicesFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableClientDataReport.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tableClientDataReport.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescription1Null() {
                return this.IsNull(this.tableClientDataReport.Description1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescription1Null() {
                this[this.tableClientDataReport.Description1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tableClientDataReport.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNull() {
                this[this.tableClientDataReport.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCode1Null() {
                return this.IsNull(this.tableClientDataReport.Code1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCode1Null() {
                this[this.tableClientDataReport.Code1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSymbolNull() {
                return this.IsNull(this.tableClientDataReport.SymbolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSymbolNull() {
                this[this.tableClientDataReport.SymbolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionNull() {
                return this.IsNull(this.tableClientDataReport.VersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionNull() {
                this[this.tableClientDataReport.VersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ClientDataReport1RowChangeEvent : global::System.EventArgs {
            
            private ClientDataReport1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1RowChangeEvent(ClientDataReport1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReport1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ClientDataReportRowChangeEvent : global::System.EventArgs {
            
            private ClientDataReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportRowChangeEvent(ClientDataReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ClientDataReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Toptix.App_Code.ClientDataTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClientDataReport1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClientDataReport1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClientDataReport1";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("ContactName", "ContactName");
            tableMapping.ColumnMappings.Add("ContactPhone", "ContactPhone");
            tableMapping.ColumnMappings.Add("isThereLisenceForSite", "isThereLisenceForSite");
            tableMapping.ColumnMappings.Add("JoiningDate", "JoiningDate");
            tableMapping.ColumnMappings.Add("ContactMail", "ContactMail");
            tableMapping.ColumnMappings.Add("LisenceValidTill", "LisenceValidTill");
            tableMapping.ColumnMappings.Add("LisenceNumber", "LisenceNumber");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("CountryID", "CountryID");
            tableMapping.ColumnMappings.Add("PayTypeID", "PayTypeID");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("DistributorID", "DistributorID");
            tableMapping.ColumnMappings.Add("ActivityTypeID", "ActivityTypeID");
            tableMapping.ColumnMappings.Add("ID1", "ID1");
            tableMapping.ColumnMappings.Add("ClientID", "ClientID");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("CurrencyID1", "CurrencyID1");
            tableMapping.ColumnMappings.Add("NetPrice", "NetPrice");
            tableMapping.ColumnMappings.Add("ConversionRate", "ConversionRate");
            tableMapping.ColumnMappings.Add("SupportDiscountValue", "SupportDiscountValue");
            tableMapping.ColumnMappings.Add("SupportFirstChargeDate", "SupportFirstChargeDate");
            tableMapping.ColumnMappings.Add("Status1", "Status1");
            tableMapping.ColumnMappings.Add("EnumChargeFrequencyID", "EnumChargeFrequencyID");
            tableMapping.ColumnMappings.Add("SupportCalculatedValue", "SupportCalculatedValue");
            tableMapping.ColumnMappings.Add("SupportPriceToCharge", "SupportPriceToCharge");
            tableMapping.ColumnMappings.Add("EnumCalculationTypeId", "EnumCalculationTypeId");
            tableMapping.ColumnMappings.Add("SupportNetPriceToCharge", "SupportNetPriceToCharge");
            tableMapping.ColumnMappings.Add("PayConditionID", "PayConditionID");
            tableMapping.ColumnMappings.Add("ID2", "ID2");
            tableMapping.ColumnMappings.Add("Name1", "Name1");
            tableMapping.ColumnMappings.Add("isPartOfSubsidiary", "isPartOfSubsidiary");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("City1", "City1");
            tableMapping.ColumnMappings.Add("CountryID1", "CountryID1");
            tableMapping.ColumnMappings.Add("Phone1", "Phone1");
            tableMapping.ColumnMappings.Add("Mail", "Mail");
            tableMapping.ColumnMappings.Add("ContactName1", "ContactName1");
            tableMapping.ColumnMappings.Add("ContactPhone1", "ContactPhone1");
            tableMapping.ColumnMappings.Add("SupportFee", "SupportFee");
            tableMapping.ColumnMappings.Add("LisenceFee", "LisenceFee");
            tableMapping.ColumnMappings.Add("ProffesionalServicesFee", "ProffesionalServicesFee");
            tableMapping.ColumnMappings.Add("CurrencyID2", "CurrencyID2");
            tableMapping.ColumnMappings.Add("ID3", "ID3");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("ID4", "ID4");
            tableMapping.ColumnMappings.Add("ProductID", "ProductID");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("IsPartOfService", "IsPartOfService");
            tableMapping.ColumnMappings.Add("EnumCalculationTypeID1", "EnumCalculationTypeID1");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("NetPrice1", "NetPrice1");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("ID5", "ID5");
            tableMapping.ColumnMappings.Add("Description1", "Description1");
            tableMapping.ColumnMappings.Add("ID6", "ID6");
            tableMapping.ColumnMappings.Add("Name2", "Name2");
            tableMapping.ColumnMappings.Add("Version", "Version");
            tableMapping.ColumnMappings.Add("ProductTypeID", "ProductTypeID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TCRMDBContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ClientDataReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endDate", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@product", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clientName", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@distributorName", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clientCountry", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClientData.ClientDataReport1DataTable dataTable, string startDate, string endDate, string product, string clientName, string distributorName, string clientCountry) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((startDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(startDate));
            }
            if ((endDate == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(endDate));
            }
            if ((product == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(product));
            }
            if ((clientName == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(clientName));
            }
            if ((distributorName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(distributorName));
            }
            if ((clientCountry == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(clientCountry));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClientData.ClientDataReport1DataTable GetData(string startDate, string endDate, string product, string clientName, string distributorName, string clientCountry) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((startDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(startDate));
            }
            if ((endDate == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(endDate));
            }
            if ((product == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(product));
            }
            if ((clientName == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(clientName));
            }
            if ((distributorName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(distributorName));
            }
            if ((clientCountry == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(clientCountry));
            }
            ClientData.ClientDataReport1DataTable dataTable = new ClientData.ClientDataReport1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ClientDataReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ClientDataReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ClientDataReport";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("ContactName", "ContactName");
            tableMapping.ColumnMappings.Add("ContactPhone", "ContactPhone");
            tableMapping.ColumnMappings.Add("isThereLisenceForSite", "isThereLisenceForSite");
            tableMapping.ColumnMappings.Add("JoiningDate", "JoiningDate");
            tableMapping.ColumnMappings.Add("ContactMail", "ContactMail");
            tableMapping.ColumnMappings.Add("LisenceValidTill", "LisenceValidTill");
            tableMapping.ColumnMappings.Add("LisenceNumber", "LisenceNumber");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("CountryID", "CountryID");
            tableMapping.ColumnMappings.Add("PayTypeID", "PayTypeID");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("DistributorID", "DistributorID");
            tableMapping.ColumnMappings.Add("ActivityTypeID", "ActivityTypeID");
            tableMapping.ColumnMappings.Add("ID1", "ID1");
            tableMapping.ColumnMappings.Add("ClientID", "ClientID");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("NetPrice", "NetPrice");
            tableMapping.ColumnMappings.Add("SupportDiscountValue", "SupportDiscountValue");
            tableMapping.ColumnMappings.Add("SupportFirstChargeDate", "SupportFirstChargeDate");
            tableMapping.ColumnMappings.Add("Status1", "Status1");
            tableMapping.ColumnMappings.Add("EnumChargeFrequencyID", "EnumChargeFrequencyID");
            tableMapping.ColumnMappings.Add("SupportCalculatedValue", "SupportCalculatedValue");
            tableMapping.ColumnMappings.Add("SupportPriceToCharge", "SupportPriceToCharge");
            tableMapping.ColumnMappings.Add("EnumCalculationTypeId", "EnumCalculationTypeId");
            tableMapping.ColumnMappings.Add("SupportNetPriceToCharge", "SupportNetPriceToCharge");
            tableMapping.ColumnMappings.Add("PayConditionID", "PayConditionID");
            tableMapping.ColumnMappings.Add("ID2", "ID2");
            tableMapping.ColumnMappings.Add("Name1", "Name1");
            tableMapping.ColumnMappings.Add("isPartOfSubsidiary", "isPartOfSubsidiary");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("City1", "City1");
            tableMapping.ColumnMappings.Add("CountryID1", "CountryID1");
            tableMapping.ColumnMappings.Add("Phone1", "Phone1");
            tableMapping.ColumnMappings.Add("Mail", "Mail");
            tableMapping.ColumnMappings.Add("ContactName1", "ContactName1");
            tableMapping.ColumnMappings.Add("ContactPhone1", "ContactPhone1");
            tableMapping.ColumnMappings.Add("SupportFee", "SupportFee");
            tableMapping.ColumnMappings.Add("LisenceFee", "LisenceFee");
            tableMapping.ColumnMappings.Add("ProffesionalServicesFee", "ProffesionalServicesFee");
            tableMapping.ColumnMappings.Add("CurrencyID1", "CurrencyID1");
            tableMapping.ColumnMappings.Add("ID3", "ID3");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("ID4", "ID4");
            tableMapping.ColumnMappings.Add("ProductID", "ProductID");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("IsPartOfService", "IsPartOfService");
            tableMapping.ColumnMappings.Add("EnumCalculationTypeID1", "EnumCalculationTypeID1");
            tableMapping.ColumnMappings.Add("Discount", "Discount");
            tableMapping.ColumnMappings.Add("NetPrice1", "NetPrice1");
            tableMapping.ColumnMappings.Add("OrderID", "OrderID");
            tableMapping.ColumnMappings.Add("CurrencyID2", "CurrencyID2");
            tableMapping.ColumnMappings.Add("ID5", "ID5");
            tableMapping.ColumnMappings.Add("Description1", "Description1");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Code1", "Code1");
            tableMapping.ColumnMappings.Add("Symbol", "Symbol");
            tableMapping.ColumnMappings.Add("ID6", "ID6");
            tableMapping.ColumnMappings.Add("Name2", "Name2");
            tableMapping.ColumnMappings.Add("Version", "Version");
            tableMapping.ColumnMappings.Add("ProductTypeID", "ProductTypeID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["TCRMDBContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ClientDataReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endDate", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@product", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clientName", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@distributorName", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clientCountry", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ClientData.ClientDataReportDataTable dataTable, string startDate, string endDate, string product, string clientName, string distributorName, string clientCountry) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((startDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(startDate));
            }
            if ((endDate == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(endDate));
            }
            if ((product == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(product));
            }
            if ((clientName == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(clientName));
            }
            if ((distributorName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(distributorName));
            }
            if ((clientCountry == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(clientCountry));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ClientData.ClientDataReportDataTable GetData(string startDate, string endDate, string product, string clientName, string distributorName, string clientCountry) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((startDate == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(startDate));
            }
            if ((endDate == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(endDate));
            }
            if ((product == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(product));
            }
            if ((clientName == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(clientName));
            }
            if ((distributorName == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(distributorName));
            }
            if ((clientCountry == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(clientCountry));
            }
            ClientData.ClientDataReportDataTable dataTable = new ClientData.ClientDataReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ClientData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ClientData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ClientData dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ClientData dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591